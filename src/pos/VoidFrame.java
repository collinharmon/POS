/*
    Point of Sale System Project
    Authors: Clayton Barber, Brandon Barton, Declan Brennan, Maximilian Hasselbusch, Eric Metcalf
    Last Updated: 20 November 2015
 */
package pos;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.WindowConstants;

public class VoidFrame extends javax.swing.JFrame {

    Connection con;

    /**
     * Creates new form VoidFrame
     *
     * @param con
     */
    public VoidFrame(Connection con) {
        this.con = con;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        IFrame = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CID = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel2.setText("WPS");

        IFrame.setBackground(new java.awt.Color(0, 0, 255));
        IFrame.setBorder(javax.swing.BorderFactory.createTitledBorder("Transaction Information"));

        jLabel3.setText("Transaction ID");

        jLabel4.setText("Customer ID");

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IFrameLayout = new javax.swing.GroupLayout(IFrame);
        IFrame.setLayout(IFrameLayout);
        IFrameLayout.setHorizontalGroup(
            IFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IFrameLayout.createSequentialGroup()
                        .addComponent(TID)
                        .addContainerGap())
                    .addGroup(IFrameLayout.createSequentialGroup()
                        .addGroup(IFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(IFrameLayout.createSequentialGroup()
                        .addComponent(CID, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Submit))))
        );
        IFrameLayout.setVerticalGroup(
            IFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Submit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Void Transaction");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        String tid = TID.getText();
        String cid = CID.getText();
        if (!checkString(tid) || !checkString(cid)) {
            TID.setText("Invalid Input: two numbers required");
            CID.setText("");
        } else {
            try {
                Statement s = con.createStatement();
                ResultSet result = s.executeQuery("select * from CONDUCTS where TID = '" + tid + "' and CID = '" + cid + "'");
                if (!result.next()) {
                    TID.setText("No such traunsaction");
                    CID.setText("");
                } else {
                    result = s.executeQuery("select CREDIT from CUSTOMER where CID = '" + cid + "'");
                    result.next();
                    String ccn = result.getNString(1);
                    result = s.executeQuery("select TOTAL from TRANSACTION where TID = '" + tid + "'");
                    result.next();
                    String total = result.getNString(1);
                    if (ccn.equals("Cash")) {
                        TenderCash tc = new TenderCash(total);
                    } else {
                        RefundCredit rc = new RefundCredit(ccn, total);
                    }
                    s.executeUpdate("delete from Transaction where tid = '" + tid + "'");
                    s.executeUpdate("delete from Contains where tid = '" + tid + "'");
                    s.executeUpdate("delete from Conducts where tid = '" + tid + "'");
                    this.dispose();
                }
            } catch (SQLException sqe) {
                System.err.println("Unable to find record");
                System.err.println(sqe.getMessage());
            }
        }
    }//GEN-LAST:event_SubmitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CID;
    private javax.swing.JPanel IFrame;
    private javax.swing.JButton Submit;
    private javax.swing.JTextField TID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private boolean checkString(String eid) {
        if (eid.isEmpty()) {
            return false;
        }
        for (int i = 0; i < eid.length(); i++) {
            if (i == 0 && eid.charAt(i) == '-') {
                if (eid.length() == 1) {
                    return false;
                } else {
                    continue;
                }
            }
            if (Character.digit(eid.charAt(i), 10) < 0) {
                return false;
            }
        }
        return true;
    }
}
